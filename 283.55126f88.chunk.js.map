{"version":3,"file":"283.55126f88.chunk.js","mappings":"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","sources":["webpack://@app/client/./src/game/config/camera.ts","webpack://@app/client/./src/game/types.ts","webpack://@app/client/./src/game/state/player.ts","webpack://@app/client/./src/game/config/map.ts","webpack://@app/client/./src/game/config/player.ts","webpack://@app/client/./src/game/components/camera/camera.tsx","webpack://@app/client/./src/utils.ts","webpack://@app/client/./src/game/components/map/map.tsx","webpack://@app/client/./src/game/hooks/use-listener.ts","webpack://@app/client/./src/game/components/player/player.tsx","webpack://@app/client/./src/game/hooks/use-actions.ts","webpack://@app/client/./src/game/config/minimap.ts","webpack://@app/client/./src/game/components/minimap/minimap.tsx","webpack://@app/client/./src/game/game.tsx","webpack://@app/client/./src/pages/home/home.tsx"],"sourcesContent":["import * as THREE from \"three\";\n\nconst cameraConfig = {\n  position: new THREE.Vector3(0, 0, 20),\n};\n\nexport default cameraConfig;\n","import * as THREE from \"three\";\n\nexport enum Action {\n  up,\n  down,\n  left,\n  right,\n}\n\nexport enum Direction {\n  none = 0,\n  up = 1,\n  down = 2,\n  left = 3,\n  right = 4,\n}\n\nexport type PlayerState = {\n  direction: Direction;\n  position: THREE.Vector3;\n  velocity: THREE.Vector3;\n  speed: number;\n};\n","import * as THREE from \"three\";\nimport { Direction, PlayerState } from \"@/game/types\";\n\nconst playerState: PlayerState = {\n  direction: Direction.none,\n  position: new THREE.Vector3(0, 0, 0),\n  velocity: new THREE.Vector3(0, 0, 0),\n  speed: 0.1,\n};\n\nexport default playerState;\n","const mapConfig = {\n  width: 15,\n  height: 15,\n  tile: {\n    width: 16,\n    height: 16,\n  }\n};\n\nexport default mapConfig;\n","const playerConfig = {\n  width: 1,\n  height: 22 / 15,\n};\n\nexport default playerConfig;\n","import React from \"react\";\nimport * as THREE from \"three\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { PerspectiveCamera } from \"@react-three/drei\";\nimport cameraConfig from \"@/game/config/camera\";\nimport playerState from \"@/game/state/player\";\nimport mapConfig from \"@/game/config/map\";\nimport playerConfig from \"@/game/config/player\";\n\ntype Props = {\n  children?: React.ReactNode;\n};\n\nexport default function Camera({ children }: Props) {\n  const [min, max] = React.useMemo(() => {\n    return [\n      new THREE.Vector3(\n        mapConfig.width * -0.5 + playerConfig.width * 0.5,\n        mapConfig.height * -0.5 + playerConfig.height * 0.5,\n        0\n      ),\n      new THREE.Vector3(\n        mapConfig.width * 0.5 - playerConfig.width * 0.5,\n        mapConfig.height * 0.5 - playerConfig.height * 0.5,\n        0\n      ),\n    ];\n  }, []);\n\n  useFrame(({ camera }) => {\n    playerState.position\n      .add(playerState.velocity.multiplyScalar(playerState.speed))\n      .clamp(min, max);\n    camera.position.copy(playerState.position);\n    camera.position.z = cameraConfig.position.z;\n    camera.rotation.set(0, 0, 0);\n  });\n\n  return (\n    <>\n      <PerspectiveCamera makeDefault position={cameraConfig.position}>\n        <group position-z={cameraConfig.position.z * -1}>{children}</group>\n      </PerspectiveCamera>\n    </>\n  );\n}\n","export function asset(path: string): string {\n  const url = path.replace(/^\\/+/, \"\");\n  return `${process.env.PUBLIC_PATH}${url}`;\n}\n","import React from \"react\";\nimport * as THREE from \"three\";\nimport mapConfig from \"@/game/config/map\";\nimport { asset } from \"@/utils\";\nimport playerState from \"@/game/state/player\";\n\nexport default function Map() {\n  const objectUrlRef = React.useRef<string | null>(null);\n\n  const { canvas, ctx, texture } = React.useMemo(() => {\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const texture = new THREE.Texture(canvas);\n    texture.minFilter = THREE.NearestFilter;\n    texture.magFilter = THREE.NearestFilter;\n    return { canvas, ctx, texture };\n  }, []);\n\n  React.useEffect(() => {\n    const tiles: number[][] = [];\n\n    for (let y = 0; y < mapConfig.height; y++) {\n      tiles.push([]);\n      for (let x = 0; x < mapConfig.width; x++) {\n        tiles[y].push(THREE.MathUtils.randInt(1, 8));\n      }\n    }\n\n    let nextFrame: number;\n\n    (async () => {\n      type Images = {\n        [id: number]: HTMLImageElement;\n      };\n      const images: Images = {};\n      for (let id = 1; id <= 8; id++) {\n        await new Promise((resolve) => {\n          images[id] = new Image();\n          images[id].onload = resolve;\n          images[id].src = asset(`/assets/map/${id}.png`);\n        });\n      }\n\n      canvas.width = mapConfig.width * mapConfig.tile.width;\n      canvas.height = mapConfig.height * mapConfig.tile.height;\n\n      for (let y = 0; y < mapConfig.height; y++) {\n        for (let x = 0; x < mapConfig.width; x++) {\n          const image = images[tiles[y][x]];\n          ctx.drawImage(\n            image,\n            x * mapConfig.tile.width,\n            y * mapConfig.tile.height,\n            mapConfig.tile.width,\n            mapConfig.tile.height\n          );\n        }\n      }\n\n      const map = new Image();\n\n      function render() {\n        nextFrame = requestAnimationFrame(render);\n        if (objectUrlRef.current === null) return;\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        ctx.globalCompositeOperation = \"destination-atop\";\n        ctx.globalAlpha = 0.25;\n\n        const x = THREE.MathUtils.mapLinear(\n          playerState.position.x,\n          mapConfig.width * -0.5,\n          mapConfig.width * 0.5,\n          0,\n          canvas.width\n        );\n        const y = THREE.MathUtils.mapLinear(\n          playerState.position.y,\n          mapConfig.height * 0.5,\n          mapConfig.height * -0.5,\n          0,\n          canvas.height\n        );\n\n        const xIndex = Math.floor(x / mapConfig.tile.width);\n        const yIndex = Math.floor(y / mapConfig.tile.height);\n\n        ctx.fillStyle = \"#ffd700\";\n        ctx.fillRect(\n          xIndex * mapConfig.tile.width,\n          yIndex * mapConfig.tile.height,\n          mapConfig.tile.width,\n          mapConfig.tile.height\n        );\n\n        ctx.globalAlpha = 1;\n\n        ctx.drawImage(map, 0, 0, canvas.width, canvas.height);\n\n        texture.needsUpdate = true;\n      }\n\n      canvas.toBlob(async (blob) => {\n        if (objectUrlRef.current !== null) {\n          URL.revokeObjectURL(objectUrlRef.current);\n        }\n        objectUrlRef.current = URL.createObjectURL(blob);\n        map.onload = () => render();\n        map.src = objectUrlRef.current;\n      });\n    })();\n    return () => {\n      if (objectUrlRef.current !== null) {\n        URL.revokeObjectURL(objectUrlRef.current);\n      }\n      cancelAnimationFrame(nextFrame);\n    };\n  }, [texture, canvas, ctx]);\n\n  return (\n    <group>\n      <mesh>\n        <planeBufferGeometry args={[mapConfig.width, mapConfig.height]} />\n        <meshBasicMaterial depthWrite={false} map={texture} />\n      </mesh>\n    </group>\n  );\n}\n","import React from \"react\";\n\nexport default function useListener<K extends keyof WindowEventMap>(\n  type: K,\n  listener: (this: Window, ev: WindowEventMap[K]) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  const listenerRef = React.useRef(listener);\n  React.useMemo(() => {\n    listenerRef.current = listener;\n  }, [listener]);\n\n  const optionsRef = React.useRef(options);\n  React.useMemo(() => {\n    optionsRef.current = options;\n  }, [options]);\n\n  React.useEffect(() => {\n    window.addEventListener(type, listenerRef.current, optionsRef.current);\n    return () => {\n      window.removeEventListener(type, listenerRef.current, optionsRef.current);\n    };\n  }, [type]);\n}\n","import React from \"react\";\nimport * as THREE from \"three\";\nimport { useFrame } from \"@react-three/fiber\";\nimport useActions from \"@/game/hooks/use-actions\";\nimport { Action, Direction } from \"@/game/types\";\nimport playerState from \"@/game/state/player\";\nimport playerConfig from \"@/game/config/player\";\nimport { asset } from \"@/utils\";\n\ntype Props = {\n  color?: string;\n};\n\nexport default function Player({ color = \"#ffd700\" }: Props) {\n  const actions = useActions();\n\n  const { canvas, ctx, texture } = React.useMemo(() => {\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const texture = new THREE.Texture(canvas);\n    texture.minFilter = THREE.NearestFilter;\n    texture.magFilter = THREE.NearestFilter;\n    return { canvas, ctx, texture };\n  }, []);\n\n  React.useEffect(() => {\n    const sprite = new Image();\n    sprite.onload = () => updateSprite();\n    sprite.src = asset(\"/assets/player/knight.png\");\n\n    type Config = {\n      [id: string]: {\n        fps: number;\n        frames: number;\n        startX: number;\n        startY: number;\n        width: number;\n        height: number;\n      };\n    };\n\n    const config: Config = {\n      idle: {\n        fps: 8,\n        frames: 4,\n        startX: 0,\n        startY: 22,\n        width: 15,\n        height: 22,\n      },\n      run: {\n        fps: 24,\n        frames: 4,\n        startX: 0,\n        startY: 0,\n        width: 15,\n        height: 22,\n      },\n    };\n\n    let nextFrame: number;\n\n    let lastFrameTime = 0;\n    let id = \"idle\";\n    let scaleX = 1;\n    let scaleY = 1;\n    let frameX = 0;\n    let frameY = 0;\n\n    // @todo clean this up or move it to own file\n    function updateSprite() {\n      nextFrame = requestAnimationFrame(updateSprite);\n\n      const frameDelay = 1000 / config[id].fps;\n      const frameWidth = config[id].width;\n      const frameHeight = config[id].height;\n      const frames = config[id].frames;\n      const startX = config[id].startX;\n      const startY = config[id].startY;\n\n      canvas.width = frameWidth;\n      canvas.height = frameHeight;\n\n      const now = Date.now();\n      if (now - lastFrameTime < frameDelay) return;\n      lastFrameTime = now;\n\n      switch (playerState.direction) {\n        case Direction.none:\n          id = \"idle\";\n          break;\n        case Direction.right:\n          scaleX = 1;\n          id = \"run\";\n          break;\n        case Direction.left:\n          scaleX = -1;\n          id = \"run\";\n          break;\n        case Direction.down:\n          id = \"run\";\n          break;\n        case Direction.up:\n          id = \"run\";\n          break;\n      }\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      ctx.globalCompositeOperation = \"destination-atop\";\n      ctx.globalAlpha = 0.25;\n\n      ctx.fillStyle = color;\n      ctx.fillRect(0, 0, frameWidth, frameHeight);\n\n      ctx.globalAlpha = 1;\n\n      ctx.save();\n\n      ctx.scale(scaleX, scaleY);\n\n      ctx.drawImage(\n        sprite,\n        startX + frameWidth * frameX,\n        startY + frameHeight * frameY,\n        frameWidth,\n        frameHeight,\n        0,\n        0,\n        frameWidth * scaleX,\n        frameHeight * scaleY\n      );\n\n      if (++frameX > frames - 1) {\n        frameX = startX;\n      }\n\n      ctx.restore();\n\n      texture.needsUpdate = true;\n    }\n\n    return () => cancelAnimationFrame(nextFrame);\n  }, [canvas, ctx, texture, color]);\n\n  useFrame(() => {\n    let direction: Direction = 0;\n    for (let i = 0, length = actions.length; i < length; i++) {\n      switch (actions[i]) {\n        case Action.up:\n          direction = Direction.up;\n          break;\n        case Action.down:\n          direction = Direction.down;\n          break;\n        case Action.left:\n          direction = Direction.left;\n          break;\n        case Action.right:\n          direction = Direction.right;\n          break;\n      }\n    }\n    switch (direction) {\n      case Direction.none:\n        playerState.velocity.set(0, 0, 0);\n        break;\n      case Direction.up:\n        playerState.velocity.y = 1;\n        break;\n      case Direction.down:\n        playerState.velocity.y = -1;\n        break;\n      case Direction.left:\n        playerState.velocity.x = -1;\n        break;\n      case Direction.right:\n        playerState.velocity.x = 1;\n        break;\n      default:\n        playerState.velocity.set(0, 0, 0);\n    }\n    playerState.direction = direction;\n  });\n\n  return (\n    <group>\n      <mesh>\n        <planeBufferGeometry args={[playerConfig.width, playerConfig.height]} />\n        <meshBasicMaterial depthWrite={false} transparent map={texture} />\n      </mesh>\n    </group>\n  );\n}\n","import React from \"react\";\nimport useListener from \"@/game/hooks/use-listener\";\nimport { Action } from \"@/game/types\";\n\nexport default function useActions(): Action[] {\n  const [actions, setActions] = React.useState<Action[]>([]);\n\n  function getActionFromKey(key: string) {\n    let action: Action;\n    switch (key.toLocaleLowerCase()) {\n      case \"w\":\n      case \"arrowup\":\n        action = Action.up;\n        break;\n      case \"s\":\n      case \"arrowdown\":\n        action = Action.down;\n        break;\n      case \"a\":\n      case \"arrowleft\":\n        action = Action.left;\n        break;\n      case \"d\":\n      case \"arrowright\":\n        action = Action.right;\n        break;\n    }\n    return action;\n  }\n\n  useListener(\"keydown\", (event) => {\n    const action = getActionFromKey(event.key);\n    if (action === undefined) return;\n    setActions((actions) => {\n      if (actions.includes(action)) return actions;\n      return [...actions, action];\n    });\n  });\n\n  useListener(\"keyup\", (event) => {\n    const action = getActionFromKey(event.key);\n    if (action === undefined) return;\n    setActions((actions) => {\n      return actions.filter((item) => item !== action);\n    });\n  });\n\n  return actions;\n}\n","const minimapConfig = {\n  width: 3,\n  height: 3,\n};\n\nexport default minimapConfig;\n","import React from \"react\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport mapConfig from \"@/game/config/map\";\nimport playerConfig from \"@/game/config/player\";\nimport cameraConfig from \"@/game/config/camera\";\nimport minimapConfig from \"@/game/config/minimap\";\nimport playerState from \"@/game/state/player\";\n\nexport default function Minimap() {\n  const groupRef = React.createRef<THREE.Group>();\n  const playerMeshRef = React.createRef<THREE.Mesh>();\n\n  const { size, camera } = useThree();\n\n  React.useEffect(() => {\n    const group = groupRef.current;\n    const cam = camera as THREE.PerspectiveCamera;\n    const fov = THREE.MathUtils.degToRad(cam.fov);\n    const height = 2 * Math.tan(fov / 2) * cameraConfig.position.z;\n    const width = height * cam.aspect;\n    group.position.set(\n      width * -0.5 + minimapConfig.width * 0.5 + 0.5,\n      height * -0.5 + minimapConfig.height * 0.5 + 0.5,\n      group.position.z\n    );\n  }, [size, camera]);\n\n  useFrame(() => {\n    const playerMesh = playerMeshRef.current;\n    playerMesh.position\n      .copy(playerState.position)\n      .multiplyScalar(minimapConfig.width / mapConfig.width);\n  });\n\n  return (\n    <group ref={groupRef}>\n      <mesh>\n        <planeBufferGeometry\n          args={[minimapConfig.width, minimapConfig.height]}\n        />\n        <meshBasicMaterial color=\"black\" depthWrite={false} />\n      </mesh>\n      <mesh ref={playerMeshRef}>\n        <planeBufferGeometry\n          args={[\n            playerConfig.width * (minimapConfig.width / mapConfig.width),\n            playerConfig.height * (minimapConfig.height / mapConfig.height),\n          ]}\n        />\n        <meshBasicMaterial color=\"crimson\" depthWrite={false} />\n      </mesh>\n    </group>\n  );\n}\n","import React from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { Text } from \"@react-three/drei\";\nimport Camera from \"@/game/components/camera/camera\";\nimport Map from \"@/game/components/map/map\";\nimport Player from \"@/game/components/player/player\";\nimport Minimap from \"@/game/components/minimap/minimap\";\n\nexport default function Game() {\n  return (\n    <Canvas flat linear dpr={1}>\n      <React.Suspense fallback={<Text>Loading...</Text>}>\n        <Map />\n        <Camera>\n          <Player />\n          <Minimap />\n        </Camera>\n      </React.Suspense>\n    </Canvas>\n  );\n}\n","import React from \"react\";\nimport Game from \"@/game/game\";\n\nexport default function Home() {\n  return (\n    <>\n      <Game />\n    </>\n  );\n}\n"],"names":["position","THREE","Action","Direction","direction","none","velocity","speed","width","height","Camera","children","min","max","React","mapConfig","playerConfig","useFrame","camera","playerState","clamp","copy","z","cameraConfig","rotation","set","PerspectiveCamera","makeDefault","asset","path","url","replace","process","Map","objectUrlRef","canvas","ctx","texture","document","createElement","getContext","minFilter","magFilter","tiles","y","push","x","nextFrame","images","id","Promise","resolve","Image","onload","src","image","drawImage","map","render","requestAnimationFrame","current","clearRect","globalCompositeOperation","globalAlpha","xIndex","Math","floor","yIndex","fillStyle","fillRect","needsUpdate","toBlob","async","URL","revokeObjectURL","createObjectURL","blob","cancelAnimationFrame","args","depthWrite","useListener","type","listener","options","listenerRef","optionsRef","window","addEventListener","removeEventListener","Player","color","actions","setActions","getActionFromKey","key","action","toLocaleLowerCase","up","down","left","right","event","undefined","includes","filter","item","useActions","sprite","updateSprite","config","idle","fps","frames","startX","startY","run","lastFrameTime","scaleX","frameX","frameDelay","frameWidth","frameHeight","now","Date","save","scale","restore","i","length","transparent","Minimap","groupRef","playerMeshRef","size","useThree","group","cam","fov","tan","aspect","minimapConfig","multiplyScalar","ref","Game","flat","linear","dpr","fallback","Text","Home"],"sourceRoot":""}